#! /bin/sh
# postinst script for radioclk
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
    configure)
	RC="/etc/default/radioclk"
	PORT=""

	# Source debconf library.
	. /usr/share/debconf/confmodule

	start-stop-daemon --oknodo --stop --quiet \
		--pidfile /var/run/radioclkd.pid \
		--exec /usr/sbin/radioclkd

	db_get radioclk/serialport && PORT="$RET"

	if test -f $RC; then
		# the radioclk file already exists...
		# keep any admin changes, while replacing the variable content
		sed "s/^PORT=\".*\"/PORT=\"$PORT\"/" < $RC > $RC.new &&
		        mv $RC.new $RC
	else
		# the radioclk file does not yet exist, so create it
		echo "# Serial port to listen on" > $RC
		echo "PORT=\"$PORT\"" >> $RC
	fi

	# finished with debconf
	db_stop
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
